N = 43 # 역의 개수
a , b = 1 , 17 # a : 첫번째 역, b : 17번째 역
n = abs(a-b) # a와 b 사이에 있는 총 역의 개수

print((1 << (n-1)+(1 << (N-n-1)))-1)

#중간의 역에서 전혀 스탬프를 찍지 않는 경우, 스탬프를 찍는 순서에 영향을 주지 않으므로 중복이 발생할 수 있다 이를 제외 해야함.
#안쪽으로 도는 경우, 바깥으로 도는 경우를 더한뒤 중복 제거
#1비트 왼쪽으로 시프트할 때마다 2배, 오른쪽으로 0.5배 a의 b제곱을 계산 경우 pow를 사용하지만 시프트 사용시 빠름.
#1*a << b ->> a*2^b 이다.!
# 2^16 + 2^26 - 1 
#각 역마다 스탬프를 찍을 지 말찌 선택이 각 2번이다 그래서 2^n 하는 것.
#print의 왼쪽은 내선 오른쪽은 외선으로 돈다 .!
